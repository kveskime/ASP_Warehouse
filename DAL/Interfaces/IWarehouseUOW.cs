using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Domain;

namespace DAL.Interfaces
{
    public interface IWarehouseUOW
    {
        //save pending changes to the data store
        void Commit();

        //get repository for type
        T GetRepository<T>() where T : class;

        //Standard repos, autogenerated
        //IEFRepository<Product> Products { get; }
        //IEFRepository<ProductInPurchase> ProductsInPurchases { get; }

        //Customs repos, manually implemented
        //add it also to EFRepositoryFactories.cs, in method GetCustomFactories
        //IPersonRepository Persons { get; }
        IProductRepository Products { get; }
        IProductTypeRepository ProductTypes { get; }
        IProductInWorkRepository ProductInWorks { get; }
        IWorkTypeRepository WorkTypes { get; }
        IProductInWarehouseRepository ProductInWarehouses { get; }
        IWarehouseRepository Warehouses { get; }
        //Article

        IArticleRepository Articles { get; }

        //Identity
        IUserIntRepository UsersInt { get; }
        IUserRoleIntRepository UserRolesInt { get; }
        IRoleIntRepository RolesInt { get; }
        IUserClaimIntRepository UserClaimsInt { get; }
        IUserLoginIntRepository UserLoginsInt { get; }



    }
}